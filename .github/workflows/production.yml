on:
  push:
    branches:
      - master

env:
  AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_REGION: ${{ secrets.AWS_REGION }}
  ECR_REPOSITORY_NAME: "grow-api"
  ECR_IMAGE_TAG: "latest"
  ECR_REGISTRY: ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com
  ECS_CLUSTER_NAME: ${{ secrets.ECS_CLUSTER_NAME }}
  ECS_SERVICE_NAME: ${{ secrets.ECS_SERVICE_NAME }}

jobs:
  rspec:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 2.7.7

      - name: Install dependencies
        run: |
          gem install bundler
          bundle config set path 'vendor/bundle'
          bundle install --retry 3 --jobs 4

      - name: Setup Database
        run: |
          docker-compose build
          docker-compose run app bundle exec rails db:create
          docker-compose run app bundle exec rails db:migrate
        env:
          RAILS_ENV: test
          RDS_DB_NAME: ${{ secrets.RDS_DB_NAME }}
          RDS_USERNAME: ${{ secrets.RDS_USERNAME }}
          RDS_PASSWORD: ${{ secrets.RDS_PASSWORD }}
          RDS_HOSTNAME: ${{ secrets.RDS_HOSTNAME }}
          RDS_PORT: ${{ secrets.RDS_PORT }}
          FRONTEND_ORIGIN: ${{ secrets.FRONTEND_ORIGIN }}
          SECRET_KEY_BASE: ${{ secrets.SECRET_KEY_BASE }}

      - name: Run RSpec tests
        run: bundle exec rspec spec/requests/v1

  deploy:
    needs: [rspec]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 2.7.7

      - name: Install dependencies
        env:
          BUNDLE_PATH: vendor/bundle
        run: |
          gem install bundler
          bundle config path vendor/bundle
          bundle install --retry 3 --jobs 4 --without development test

      - name: Install aws-cli
        run: |
          sudo apt-get -y install python3-pip
          sudo pip3 install awscli

      - name: Configure AWS credentials
        run: |
          aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID
          aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY
          aws configure set default.region $AWS_REGION

      - name: Build Docker image
        env:
          IMAGE_NAME: ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY_NAME }}:${{ env.ECR_IMAGE_TAG }}
        run: |
          docker build -t $IMAGE_NAME .
          aws ecr get-login-password | docker login --username AWS --password-stdin $ECR_REGISTRY
          docker push $IMAGE_NAME

      - name: Deploy to ECS
        run: |
          aws ecs update-service --cluster ${{ env.ECS_CLUSTER_NAME }} --service ${{ env.ECS_SERVICE_NAME }} --force-new-deployment
